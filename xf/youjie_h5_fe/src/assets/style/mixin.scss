// 背景图片地址和大小
@mixin bis($url) {
  background-image: url($url);
  background-repeat: no-repeat;
  background-size: 100% 100%;
}

//  圆角边框
@mixin borderRadius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  -o-border-radius: $radius;
  border-radius: $radius;
}

//定位全屏
@mixin allcover {
  position: absolute;
  top: 0;
  right: 0;
}

//定位水平垂直居中
@mixin center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

//定位垂直居中
@mixin ct {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

//定位水平居中
@mixin cl {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

//宽高
@mixin wh($width, $height) {
  width: $width;
  height: $height;
}

//字体大小，颜色
@mixin sc($size, $color, $origin: center center) {
  color: $color;
  font-weight: normal;
  // 12px以下用scale缩小
  @if $size < 12px {
    transform-origin: $origin;
    font-size: 12px;
    -webkit-transform: scale(floor($size / 0.12px) / 100); // 0.12px = ($size * 0 + 1) / 12 * 100
  } @else {
    font-size: $size;
  }
}

//flex 布局和 子元素 对其方式
@mixin fj($type: space-between) {
  display: flex;
  justify-content: $type;
}

// 图片水平居中
@mixin ilc {
  margin-left: auto;
  margin-right: auto;
  display: block;
}

// 绝对定位在底部
@mixin pb {
  position: absolute;
  bottom: 0;
}

@mixin pd($topdis, $bottomdis, $leftdis, $rightdis) {
  position: absolute;
  top: $topdis;
  bottom: $bottomdis;
  left: $leftdis;
  right: $rightdis;
}

@mixin input {
  border: none;
  border-radius: 0;
  color: $formInputColor;
  font-size: 14px;
  height: -webkit-fill-available;
  border-bottom: 1px solid $lineColor;
  margin-left: 10px;
  padding-right: 10px;
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  &:focus {
    outline-style: none;
    outline: none;
  }
}

@mixin formInput {
  border: 0;
  color: $formInputColor;
  font-size: 14px;
  height: -webkit-fill-available;
  padding-left: 0;
  padding-right: 0;
  &:focus {
    outline-style: none;
  }
}

@mixin button($margin: 0 10px, $radius: 4px, $spacing: 0) {
  height: 44px;
  border-radius: $radius;
  @include margin($margin);
  @if $spacing > 0 {
    letter-spacing: $spacing;
    text-indent: $spacing;
  }
}

@mixin linear-gradient-($leftColor, $rightColor) {
  background: -webkit-linear-gradient(left, $leftColor, $rightColor); /* Safari 5.1 - 6.0 */
  background: -o-linear-gradient(right, $leftColor, $rightColor); /* Opera 11.1 - 12.0 */
  background: -moz-linear-gradient(right, $leftColor, $rightColor); /* Firefox 3.6 - 15 */
  background: linear-gradient(to right, $leftColor, $rightColor); /* 标准的语法（必须放在最后） */
}
@mixin linear-vgradient($topColor, $bottomColor) {
  background: -webkit-linear-gradient(top, $topColor, $bottomColor); /* Safari 5.1 - 6.0 */
  background: -o-linear-gradient(bottom, $topColor, $bottomColor); /* Opera 11.1 - 12.0 */
  background: -moz-linear-gradient(bottom, $topColor, $bottomColor); /* Firefox 3.6 - 15 */
  background: linear-gradient(to bottom, $topColor, $bottomColor); /* 标准的语法（必须放在最后） */
}

@mixin header {
  height: 44px;
  color: #333;
  font-size: 17px;
  line-height: 44px !important;
  background-color: #fff;
}

@mixin limit-line($lineCount) {
  overflow: hidden;

  display: flex;
  -webkit-line-clamp: $lineCount;
  -webkit-box-orient: vertical;
  box-orient: vertical;
}

@mixin thin-border-2019(
  $directionMaps: bottom,
  $color: #ccc,
  $radius: (
    0,
    0,
    0,
    0
  ),
  $position: after
) {
  // https://juejin.im/post/5d70a030f265da03a715f3fd?utm_source=gold_browser_extension
  // 是否只有一个方向
  $isOnlyOneDir: string==type-of($directionMaps);

  @if ($isOnlyOneDir) {
    $directionMaps: ($directionMaps);
  }

  @each $directionMap in $directionMaps {
    border-#{$directionMap}: 1px solid $color;
  }

  // 判断圆角是list还是number
  @if (list==type-of($radius)) {
    border-radius: nth($radius, 1) nth($radius, 2) nth($radius, 3) nth($radius, 4);
  } @else {
    border-radius: $radius;
  }

  @media only screen and (-webkit-min-device-pixel-ratio: 2) {
    & {
      position: relative;

      // 删除1像素密度比下的边框
      @each $directionMap in $directionMaps {
        border-#{$directionMap}: none;
      }
    }

    &:#{$position} {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      display: block;
      width: 200%;
      height: 200%;
      transform: scale(0.5);
      box-sizing: border-box;
      padding: 1px;
      transform-origin: 0 0;
      pointer-events: none;
      border: 0 solid $color;

      @each $directionMap in $directionMaps {
        border-#{$directionMap}-width: 1px;
      }

      // 判断圆角是list还是number
      @if (list==type-of($radius)) {
        border-radius: nth($radius, 1) * 2 nth($radius, 2) * 2 nth($radius, 3) * 2 nth($radius, 4) * 2;
      } @else {
        border-radius: $radius * 2;
      }
    }
  }

  @media only screen and (-webkit-min-device-pixel-ratio: 3) {
    &:#{$position} {
      // 判断圆角是list还是number
      @if (list==type-of($radius)) {
        border-radius: nth($radius, 1) * 3 nth($radius, 2) * 3 nth($radius, 3) * 3 nth($radius, 4) * 3;
      } @else {
        border-radius: $radius * 3;
      }

      width: 300%;
      height: 300%;
      transform: scale(0.33);
    }
  }
}

@mixin thin-border($background: #e8eaed, $left: 0, $right: auto, $dashed: false, $isBottom: true) {
  position: relative;
  &:after {
    content: '';
    height: 1px; //控制边框宽度
    width: 200%; //控制边框长度
    position: absolute;
    left: $left;
    right: $right;
    background-color: $background;
    border: 0 solid transparent;
    border-radius: 0;
    -webkit-border-radius: 0;
    transform: scale(0.5); //缩放宽度，达到0.5px的效果
    -webkit-transform: scale(0.5);
    -moz-transform: scale(0.5);
    -ms-transform: scale(0.5);
    -o-transform: scale(0.5);
    transform-origin: bottom left; //定义缩放基点
    -webkit-transform-origin: bottom left;
    -moz-transform-origin: bottom left;
    -ms-transform-origin: bottom left;
    -o-transform-origin: bottom left;
    @if $isBottom == true {
      top: auto;
      bottom: 0;
    }
    @if $isBottom == false {
      top: 0;
      bottom: auto;
    }
    @if $dashed == true {
      background-image: linear-gradient(90deg, $background 50%, transparent 50%, transparent);
      background-size: 1% 100%;
      background-color: transparent;
    }
  }
}

@mixin thin-left-border($background: #e8eaed, $top: 0, $bottom: auto, $dashed: false) {
  position: relative;
  &:after {
    content: '';
    height: 200%; //控制边框宽度
    width: 1px; //控制边框长度
    position: absolute;
    top: $top;
    bottom: $bottom;
    left: 0;
    background-color: $background;
    border: 0 solid transparent;
    border-radius: 0;
    -webkit-border-radius: 0;
    transform: scale(0.5); //缩放宽度，达到0.5px的效果
    -webkit-transform: scale(0.5);
    -moz-transform: scale(0.5);
    -ms-transform: scale(0.5);
    -o-transform: scale(0.5);
    transform-origin: top left; //定义缩放基点
    -webkit-transform-origin: top left;
    -moz-transform-origin: top left;
    -ms-transform-origin: top left;
    -o-transform-origin: top left;
    @if $dashed == true {
      background-image: linear-gradient($background 0%, transparent);
      background-size: 1px 5px, 100%;
      background-color: transparent;
    }
  }
}

@mixin margin($margin) {
  @if length($margin) == 1 {
    margin: $margin;
  }
  @if length($margin) == 2 {
    margin: nth($margin, 1) nth($margin, 2);
  }
  @if length($margin) == 3 {
    margin: nth($margin, 1) nth($margin, 2) nth($margin, 3);
  }
  @if length($margin) == 4 {
    margin: nth($margin, 1) nth($margin, 2) nth($margin, 3) nth($margin, 4);
  }
}

@mixin price-wrapper-flag($leftImage, $rightImage) {
  display: flex;
  align-items: center;
  justify-content: flex-start;

  .left {
    background: url($leftImage) no-repeat;
  }

  .right {
    background: url($rightImage) no-repeat;
  }

  .left,
  .right {
    width: 12px;
    right: 12px;
    background-size: 12px 12px;
  }

  .high-price {
    width: 55%;
  }

  label {
    display: block;
    height: 12px;
    background: linear-gradient(to right, #eeacac, #d38686);
    display: flex;
    align-items: center;
    justify-content: center;

    span {
      text-align: center;
      white-space: nowrap;
      display: inline-block;
      @include sc(9px, #fff);
      font-weight: 400;
      line-height: 1;
      text-align: center;
    }
  }
}

@mixin quanyi-wrapper() {
  display: flex;
  font-size: 0;
  align-items: flex-end;
  img {
    width: 2.5px;
  }
  div {
    height: 12px;
    background: #e96b41;
    border-radius: 5px 5px 5px 0;
  }
  .debt-style {
    display: inline-block;
    @include sc(8px, #f8ecda);
    text-indent: -8px;
    position: relative;
    left: 3px;
  }
}
